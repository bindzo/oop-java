@startuml

abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList

class ArrayList {
Object[] elementData
size()
}

enum TimeUnit {
DAYS
HOURS
MINUTES
}

@enduml

@startuml

interface AccountService {
+ registerPaymentMethod()
+ registerAccount()
+ processDocs()
- buildAccount()
}

class PosAccountService {}

class OnlineAccountService {}

class AffiliateAccountService {}

AccountService <|-- PosAccountService
AccountService <|-- OnlineAccountService
AccountService <|-- AffiliateAccountService

interface Publisher {
    + sendMessage(EventContract e)
}

interface EventContract {
    getRawPayload() []byte
}

EventContract -left-> Publisher

abstract class JsonPayload {
    + Serializer parser
    []byte getRawPayload() 
}

EventContract <|-- JsonPayload

package Json {
    JsonPayload <|-- AccountRegistered
    JsonPayload <|-- AccountCredited
}

abstract class GrpcPayload {
    []byte getRawPayload()
}
EventContract <|-- GrpcPayload

package Grpc {
   GrpcPayload <|-- GrpcAccountRegistered
   GrpcPayload <|-- GrpcAccountCredited
}
Publisher <|-up- KafkaPubSub
Publisher <|-up- AMPPubSub

class OnlineBanking {
   - AccountService provider
   - Publisher publisher
   + registerAccount()
}

Publisher -down-> OnlineBanking
AccountService -right-> OnlineBanking

interface TransferCredit
interface DepositCredit
TransferCredit <|-- AccountService
DepositCredit <|-- AccountService
@enduml