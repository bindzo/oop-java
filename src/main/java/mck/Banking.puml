@startuml
interface DigitalBankingService {
+ registerPaymentMethod()
+ registerAccount()
+ processDocs()
- buildAccount()
}

class PosDigitalBankingService {}

class OnlineDigitalBankingService {}

class AffiliateDigitalBankingService {}

DigitalBankingService <|-- PosDigitalBankingService
DigitalBankingService <|-- OnlineDigitalBankingService
DigitalBankingService <|-- AffiliateDigitalBankingService

interface Publisher {
    + sendMessage(EventContract e)
}

interface EventContract {
    getRawPayload() []byte
}

EventContract -left-> Publisher

abstract class JsonPayload {
    + Serializer parser
    []byte getRawPayload() 
}

EventContract <|-- JsonPayload

package Json {
    JsonPayload <|-- AccountRegistered
    JsonPayload <|-- AccountCredited
}

abstract class GrpcPayload {
    []byte getRawPayload()
}
EventContract <|-- GrpcPayload

package Grpc {
   GrpcPayload <|-- GrpcAccountRegistered
   GrpcPayload <|-- GrpcAccountCredited
}
Publisher <|-up- KafkaPubSub
Publisher <|-up- AMPPubSub

class PosBankingService {
   - DigitalBankingService provider
   - Publisher publisher
   + registerAccount()
}

Publisher -down-> PosBankingService
DigitalBankingService -right-> PosBankingService

interface TransferCredit
interface DepositCredit
TransferCredit <|-- DigitalBankingService
DepositCredit <|-- DigitalBankingService
@enduml